// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Bảng tour du lịch
model Tour {
  TourID        Int        @id @default(autoincrement()) @map(name: "TourID")
  TourName      String
  Description   String?
  PriceTotal    Float
  StartDate     DateTime
  EndDate       DateTime
  Location      String?
  TotalMember   Int
  TotalChd      Int
  TotalElder    Int
  TourTypeId    Int
  RoomTypeId    Int
  Img           String?
  RoomStartDate DateTime
  RoomEndDate   DateTime
  TourType      TourType   @relation(fields: [TourTypeId], references: [TourTypeId])
  RoomType      RoomType   @relation(fields: [RoomTypeId], references: [RoomTypeId])
  Bookings      Booking[]
  Feedback      Feedback[]
}

// Bảng kiểu tour
model TourType {
  TourTypeId    Int          @id @default(autoincrement()) @map(name: "TourTypeId")
  Name          String
  Description   String?
  PriceElder    Float?
  PriceChildren Float?
  PromotionId   Int?
  Img           String
  IsLocal       Int
  RateTourType  Int
  StartDate     DateTime?
  EndDate       DateTime?
  MaxSlot       Int          @default(0)
  OrderSlot     Int          @default(0)
  Tours         Tour[]
  Promotion     Promotion[]
  CollectImg    CollectImg[]
}

//Bảng ảnh sưu tầm
model CollectImg {
  CollectImgId Int      @id @default(autoincrement()) @map(name: "CollectImgId")
  Name         String?
  Src          String
  TourTypeId   Int
  TourType     TourType @relation(fields: [TourTypeId], references: [TourTypeId])
}

// Bảng tour khách hàng
model Customer {
  CustomerID     Int               @id @default(autoincrement()) @map(name: "CustomerID")
  FirstName      String
  LastName       String
  Email          String            @unique
  Phone          String?           @unique
  Address        String?
  CustomerTypeId Int
  Bookings       Booking[]
  Feedback       Feedback[]
  Support        CustomerSupport[]
  CustomerType   CustomerType      @relation(fields: [CustomerTypeId], references: [CustomerTypeId])
}

// Bảng kiểu khách hàng (VIP - Normal)
model CustomerType {
  CustomerTypeId Int        @id @default(autoincrement()) @map(name: "CustomerTypeId")
  Name           String
  Description    String?
  Customer       Customer[]
}

// Bảng đặt tour
model Booking {
  BookingID   Int       @id @default(autoincrement()) @map(name: "BookingID")
  CustomerID  Int
  TourID      Int
  BookingDate DateTime
  Customer    Customer  @relation(fields: [CustomerID], references: [CustomerID])
  Tour        Tour      @relation(fields: [TourID], references: [TourID])
  Payments    Payment[]
}

// Bảng thanh toán
model Payment {
  PaymentID   Int      @id @default(autoincrement()) @map(name: "PaymentID")
  BookingID   Int
  PaymentDate DateTime
  Amount      Float
  Booking     Booking  @relation(fields: [BookingID], references: [BookingID])
}

// Bảng phản hồi
model Feedback {
  FeedbackID Int      @id @default(autoincrement()) @map(name: "FeedbackID")
  CustomerID Int
  TourID     Int
  Rating     Int?
  Comment    String?
  Customer   Customer @relation(fields: [CustomerID], references: [CustomerID])
  Tour       Tour     @relation(fields: [TourID], references: [TourID])
}

// Bảng hỗ trợ
model CustomerSupport {
  SupportID     Int         @id @default(autoincrement()) @map(name: "SupportID")
  CustomerID    Int
  SupportTypeId Int
  SupportDate   DateTime
  Description   String?
  Customer      Customer    @relation(fields: [CustomerID], references: [CustomerID])
  SupportType   SupportType @relation(fields: [SupportTypeId], references: [SupportTypeId])
}

// Bảng kiểu báo cáo
model SupportType {
  SupportTypeId   Int               @id @default(autoincrement()) @map(name: "SupportTypeId")
  Name            String
  Description     String?
  CustomerSupport CustomerSupport[]
}

// Bảng khuyến mãi
model Promotion {
  PromotionID Int       @id @default(autoincrement()) @map(name: "PromotionID")
  PromoCode   String
  Name        String?
  Description String?
  Discount    Float?
  StartDate   DateTime
  EndDate     DateTime
  TourTypeId  Int?
  TourType    TourType? @relation(fields: [TourTypeId], references: [TourTypeId])
}

// Bảng Khách sạn
model Hotel {
  HotelId     Int        @id @default(autoincrement()) @map(name: "HotelId")
  Name        String
  Address     String?
  City        String?
  Country     String?
  StarRating  Int?
  Description String?
  Phone       String?
  Website     String?
  Email       String
  RoomTypes   RoomType[]
}

// Bảng kiểu phòng
model RoomType {
  RoomTypeId   Int            @id @default(autoincrement()) @map(name: "RoomTypeId")
  Name         String?
  MaxOccupancy Int?
  Price        Float?
  HotelId      Int?
  KateFee      Int
  Availability Availability[]
  Hotel        Hotel?         @relation(fields: [HotelId], references: [HotelId])
  Tour         Tour[]
}

// Bảng tình trạng phòng trống
model Availability {
  AvailabilityId Int       @id @default(autoincrement()) @map(name: "AvailabilityId")
  DateCheck      DateTime?
  AvailableRooms Int?
  RoomTypeId     Int?
  RoomType       RoomType? @relation(fields: [RoomTypeId], references: [RoomTypeId])
}

//Bảng user
model User {
  UserId    Int       @id @default(autoincrement()) @map(name: "UserId")
  FirstName String
  LastName  String
  Address   String
  Phone     Int
  AccountId Int?
  Account   Account[]
}

//Bảng tài khoản
model Account {
  AccountId Int    @id @default(autoincrement()) @map(name: "AccountId")
  UserName  String
  Password  String
  RoleId    Int    @default(0)
  UserId    Int

  User        User?        @relation(fields: [UserId], references: [UserId])
  RoleAccount RoleAccount? @relation(fields: [RoleId], references: [RoleId])
}

//Bảng phân quyền
model RoleAccount {
  RoleId      Int       @id @default(autoincrement()) @map(name: "RoleId")
  RoleName    String
  Description String
  Account     Account[]
}
